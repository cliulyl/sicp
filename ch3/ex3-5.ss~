#lang racket
; 范围内随机数
; 稍微改了这个函数，random 的行为有所不同，在 Racket 中不能写成 (+ low (random range))，不然产生不了浮点数。
(define (random-in-range low high)
  (let ((range (- high low)))
    (+ low (* (random) range))))

(define (monte-carlo trials experiment)
  (define (iter trials-remaining trials-passed)
    (cond ((= trials-remaining 0)
           (/ trials-passed trials))
          ((experiment)
           (iter (- trials-remaining 1) (+ trials-passed 1)))
          (else
           (iter (- trials-remaining 1) trials-passed))))
  (iter trials 0))

(define (estimate-integral P x1 x2 y1 y2 trials)
    (define (experiment)  ;用括号表示一个过程；注意这里单独定义一个无参数的过程，来接收随机参数
            (P (random-in-range x1 x2)
               (random-in-range y1 y2)))
    (* (monte-carlo trials experiment)
       (abs (- x2 x1))
       (abs (- y2 y1)))
)

(define (square x) (* x x))

(define (estimate-pi trials)
    (define (area-test x y)
        (<= (+ (square x) (square y)) 1))
    (estimate-integral area-test -1 1 -1 1 trials)
)

(exact->inexact (estimate-pi 10000))