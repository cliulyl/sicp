;#lang sicp
(define (mul a b)
    (define (mul_recur f a b)
        (cond ((= b 0) f)
              ((even? b) (mul_recur f (double a) (halve b)))
              (else (mul_recur (+ f a) a (- b 1)))
        )
    )
    (mul_recur 0 a b)
)
(define (even? n)
    (= (remainder n 2) 0)
)
(define (double x) (* x 2))
(define (halve x) (/ x 2))
(display (mul 3 5))