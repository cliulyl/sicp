#lang sicp
(define (recur_expt b n)
    (define (recur_expt_base a b n)
        (cond ((= n 0) a)
              ((even? n) (recur_expt_base a (square b) (/ n 2)))
              (else (recur_expt_base (* a b) b (- n 1)))
        ) 
    )
    (recur_expt_base 1 b n)
)
(define (square x) (* x x))
(define (even? n)
    (= (remainder n 2) 0)
)